plugins {
	id 'fabric-loom' version '1.10.1'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.parchmentmc.org" }
	maven{ url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
	maven { url = "https://jitpack.io" }
	maven { url = "https://maven.ladysnake.org/releases" }

}

subprojects {
	dependencies {
		modImplementation "com.github.ramixin:mixson:${project.mixson_version}"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment "org.parchmentmc.data:parchment-${project.parchment_version}@zip"
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include modImplementation("maven.modrinth:frozenlib:${project.frozenlib_version}")
	include modImplementation("com.github.ramixin:mixson-fabric:${project.mixson_version}")
	include modImplementation("maven.modrinth:trinkets-canary:${project.trinkets_version}")
	include modImplementation ("org.ladysnake.cardinal-components-api:cardinal-components-base:${project.cca_version}")
	include modImplementation ("org.ladysnake.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
	include modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation("maven.modrinth:modmenu:$modmenu_version")
	modImplementation("maven.modrinth:friends-and-foes:$friendsandfoes_version")
	modImplementation("maven.modrinth:resourceful-lib:$resourceful_version")
	modImplementation("maven.modrinth:yacl:$yacl_version")

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

loom {
	accessWidenerPath = file("src/main/resources/legacies_and_legends.accesswidener")
}

// Datagen

fabricApi {
	configureDataGeneration()
}

loom {
	mods {
		"legacies_and_legends" {
			sourceSet sourceSets.main
		}
	}

	runs {
		datagen {
			inherit client
		}
	}
}